apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-ml-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python-ml-service
  template:
    metadata:
      labels:
        app: python-ml-service
    spec:
      containers:
        - name: python-ml-service
          image: python-ml-service:latest
          ports:
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: python-ml-service
spec:
  selector:
    app: python-ml-service
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlwrapper-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlwrapper-backend
  template:
    metadata:
      labels:
        app: mlwrapper-backend
    spec:
      containers:
        - name: mlwrapper-backend
          image: mlwrapper-backend:latest
          ports:
            - containerPort: 5000
          env:
            - name: PYTHON_ML_SERVICE_URL
              value: "http://python-ml-service:8000"
---
apiVersion: v1
kind: Service
metadata:
  name: mlwrapper-backend
spec:
  selector:
    app: mlwrapper-backend
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-app
  template:
    metadata:
      labels:
        app: frontend-app
    spec:
      containers:
        - name: frontend-app
          image: frontend-app:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-app
spec:
  selector:
    app: frontend-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer